***************
*** 252,266 ****
  
  			var cr = this._connectionRules;
  
- 			if (jsonRules.connectionRules) {
  
- 				jsonRules.connectionRules.each((function(rules){
  
  					if (this._isRoleOfOtherNamespace(rules.role)) {
  
- 						if (!cr[rules.role]) {
  
- 							cr[rules.role] = new Hash();
  
  						}
  
--- 252,266 ----
  
  			var cr = this._connectionRules;
  
+ 			if (jsonRules.get('connectionRules')) {
  
+ 				jsonRules.get('connectionRules').each((function(rules){
  
  					if (this._isRoleOfOtherNamespace(rules.role)) {
  
+ 						if (cr.get(rules.role) == undefined) {
  
+ 							cr.set(rules.role, new Hash());
  
  						}
  
***************
*** 268,276 ****
  
  					else {
  
- 						if (!cr[namespace + rules.role]) 
  
- 							cr[namespace + rules.role] = new Hash();
  
  					}
  
--- 268,276 ----
  
  					else {
  
+ 						if (cr.get(namespace + rules.role) == undefined) 
  
+ 							cr.set(namespace + rules.role, new Hash());
  
  					}
  
***************
*** 330,342 ****
  
  						
  
- 						if (!cr[role][from]) 
  
- 							cr[role][from] = toRoles;
  
  						else 
  
- 							cr[role][from] = cr[role][from].concat(toRoles);
  
  						
  
--- 330,342 ----
  
  						
  
+ 						if (cr.get(role).get(from) == undefined) 
  
+ 							cr.get(role).set(from, toRoles);
  
  						else 
  
+ 							cr.get(role).set(from, cr.get(role).get(from).concat(toRoles));
  
  						
  
***************
*** 352,360 ****
  
  			var cardr = this._cardinalityRules;
  
- 			if (jsonRules.cardinalityRules) {
  
- 				jsonRules.cardinalityRules.each((function(rules){
  
  					var cardrKey;
  
--- 352,360 ----
  
  			var cardr = this._cardinalityRules;
  
+ 			if (jsonRules.get('cardinalityRules')) {
  
+ 				jsonRules.get('cardinalityRules').each((function(rules){
  
  					var cardrKey;
  
***************
*** 372,384 ****
  
  					
  
- 					if (!cardr[cardrKey]) {
  
- 						cardr[cardrKey] = {};
  
  						for (i in rules) {
  
- 							cardr[cardrKey][i] = rules[i];
  
  						}
  
--- 372,384 ----
  
  					
  
+ 					if (cardr.get(cardrKey) == undefined) {
  
+ 						cardr.set(cardrKey, {});
  
  						for (i in rules) {
  
+ 							cardr.get(cardrKey)[i] = rules[i]; // TODO check if this really works
  
  						}
  
***************
*** 394,406 ****
  
  							if (this._isRoleOfOtherNamespace(rule.role)) {
  
- 								oe[rule.role] = rule;
  
  							}
  
  							else {
  
- 								oe[namespace + rule.role] = rule;
  
  							}
  
--- 394,406 ----
  
  							if (this._isRoleOfOtherNamespace(rule.role)) {
  
+ 								oe.set(rule.role, rule);
  
  							}
  
  							else {
  
+ 								oe.set(namespace + rule.role, rule);
  
  							}
  
***************
*** 408,414 ****
  
  					}
  
- 					cardr[cardrKey].outgoingEdges = oe;
  
  					var ie = new Hash();
  
--- 408,414 ----
  
  					}
  
+ 					cardr.get(cardrKey).outgoingEdges = oe;
  
  					var ie = new Hash();
  
***************
*** 418,430 ****
  
  							if (this._isRoleOfOtherNamespace(rule.role)) {
  
- 								ie[rule.role] = rule;
  
  							}
  
  							else {
  
- 								ie[namespace + rule.role] = rule;
  
  							}
  
--- 418,430 ----
  
  							if (this._isRoleOfOtherNamespace(rule.role)) {
  
+ 								ie.set(rule.role, rule);
  
  							}
  
  							else {
  
+ 								ie.set(namespace + rule.role, rule);
  
  							}
  
***************
*** 432,438 ****
  
  					}
  
- 					cardr[cardrKey].incomingEdges = ie;
  
  				}).bind(this));
  
--- 432,438 ----
  
  					}
  
+ 					cardr.get(cardrKey).incomingEdges = ie;
  
  				}).bind(this));
  
***************
*** 444,452 ****
  
  			var conr = this._containmentRules;
  
- 			if (jsonRules.containmentRules) {
  
- 				jsonRules.containmentRules.each((function(rules){
  
  					var conrKey;
  
--- 444,452 ----
  
  			var conr = this._containmentRules;
  
+ 			if (jsonRules.get('containmentRules')) {
  
+ 				jsonRules.get('containmentRules').each((function(rules){
  
  					var conrKey;
  
***************
*** 462,470 ****
  
  					}
  
- 					if (!conr[conrKey]) {
  
- 						conr[conrKey] = [];
  
  					}
  
--- 462,470 ----
  
  					}
  
+ 					if (conr.get(conrKey) == undefined) {
  
+ 						conr.set(conrKey, []);
  
  					}
  
***************
*** 472,484 ****
  
  						if (this._isRoleOfOtherNamespace(containRole)) {
  
- 							conr[conrKey].push(containRole);
  
  						}
  
  						else {
  
- 							conr[conrKey].push(namespace + containRole);
  
  						}
  
--- 472,484 ----
  
  						if (this._isRoleOfOtherNamespace(containRole)) {
  
+ 							conr.get(conrKey).push(containRole);
  
  						}
  
  						else {
  
+ 							conr.get(conrKey).push(namespace + containRole);
  
  						}
  
***************
*** 494,502 ****
  
  			var morphr = this._morphingRules;
  
- 			if (jsonRules.morphingRules) {
  
- 				jsonRules.morphingRules.each((function(rules){
  
  					var morphrKey;
  
--- 494,502 ----
  
  			var morphr = this._morphingRules;
  
+ 			if (jsonRules.get('morphingRules')) {
  
+ 				jsonRules.get('morphingRules').each((function(rules){
  
  					var morphrKey;
  
***************
*** 512,520 ****
  
  					}
  
- 					if (!morphr[morphrKey]) {
  
- 						morphr[morphrKey] = [];
  
  					}
  
--- 512,520 ----
  
  					}
  
+ 					if (morphr.get(morphrKey) == undefined) {
  
+ 						morphr.set(morphrKey, []);
  
  					}
  
***************
*** 526,532 ****
  
  					rules.baseMorphs.each((function(baseMorphStencilId){
  
- 						morphr[morphrKey].push(this._getStencilById(namespace + baseMorphStencilId));
  
  					}).bind(this));
  
--- 526,532 ----
  
  					rules.baseMorphs.each((function(baseMorphStencilId){
  
+ 						morphr.get(morphrKey).push(this._getStencilById(namespace + baseMorphStencilId));
  
  					}).bind(this));
  
***************
*** 540,546 ****
  
  			var layoutRules = this._layoutRules;
  
- 			if (jsonRules.layoutRules) {
  
  				
  
--- 540,546 ----
  
  			var layoutRules = this._layoutRules;
  
+ 			if (jsonRules.get('layoutRules')) {
  
  				
  
***************
*** 564,570 ****
  
  				
  
- 				jsonRules.layoutRules.each(function(rules){
  
  					var layoutKey;
  
--- 564,570 ----
  
  				
  
+ 				jsonRules.get('layoutRules').each(function(rules){
  
  					var layoutKey;
  
***************
*** 580,612 ****
  
  					}
  
- 					if (!layoutRules[layoutKey]) {
  
- 						layoutRules[layoutKey] = {};
  
  					}
  
  					if (rules["in"]){
  
- 						layoutRules[layoutKey]["in"] = getDirections(rules["in"]);
  
  					}
  
  					if (rules["ins"]){
  
- 						layoutRules[layoutKey]["ins"] = (rules["ins"]||[]).map(function(e){ return getDirections(e) })
  
  					}
  
  					if (rules["out"]) {
  
- 						layoutRules[layoutKey]["out"] = getDirections(rules["out"]);
  
  					}
  
  					if (rules["outs"]){
  
- 						layoutRules[layoutKey]["outs"] = (rules["outs"]||[]).map(function(e){ return getDirections(e) })
  
  					}
  
--- 580,612 ----
  
  					}
  
+ 					if (layoutRules.get(layoutKey) == undefined) {
  
+ 						layoutRules.set(layoutKey, {});
  
  					}
  
  					if (rules["in"]){
  
+ 						layoutRules.get(layoutKey)["in"] = getDirections(rules["in"]);
  
  					}
  
  					if (rules["ins"]){
  
+ 						layoutRules.get(layoutKey)["ins"] = (rules["ins"]||[]).map(function(e){ return getDirections(e) })
  
  					}
  
  					if (rules["out"]) {
  
+ 						layoutRules.get(layoutKey)["out"] = getDirections(rules["out"]);
  
  					}
  
  					if (rules["outs"]){
  
+ 						layoutRules.get(layoutKey)["outs"] = (rules["outs"]||[]).map(function(e){ return getDirections(e) })
  
  					}
  
***************
*** 640,646 ****
  
  		if (args.sourceStencil && args.targetStencil) {
  
- 			var source = this._cachedConnectSET[args.sourceStencil.id()];
  
  			
  
--- 640,646 ----
  
  		if (args.sourceStencil && args.targetStencil) {
  
+ 			var source = this._cachedConnectSET.get(args.sourceStencil.id());
  
  			
  
***************
*** 648,660 ****
  
  				source = new Hash();
  
- 				this._cachedConnectSET[args.sourceStencil.id()] = source;
  
  			}
  
  			
  
- 			var edge = source[args.edgeStencil.id()];
  
  			
  
--- 648,660 ----
  
  				source = new Hash();
  
+ 				this._cachedConnectSET.set(args.sourceStencil.id(), source);
  
  			}
  
  			
  
+ 			var edge = source.get(args.edgeStencil.id());
  
  			
  
***************
*** 662,680 ****
  
  				edge = new Hash();
  
- 				source[args.edgeStencil.id()] = edge;
  
  			}
  
  			
  
- 			edge[args.targetStencil.id()] = result;
  
  			
  
  		} else if (args.sourceStencil) {
  
- 			var source = this._cachedConnectSE[args.sourceStencil.id()];
  
  			
  
--- 662,680 ----
  
  				edge = new Hash();
  
+ 				source.set(args.edgeStencil.id(), edge);
  
  			}
  
  			
  
+ 			edge.set(args.targetStencil.id(), result);
  
  			
  
  		} else if (args.sourceStencil) {
  
+ 			var source = this._cachedConnectSE.get(args.sourceStencil.id());
  
  			
  
***************
*** 682,700 ****
  
  				source = new Hash();
  
- 				this._cachedConnectSE[args.sourceStencil.id()] = source;
  
  			}
  
  			
  
- 			source[args.edgeStencil.id()] = result;
  
  
  
  		} else {
  
- 			var target = this._cachedConnectTE[args.targetStencil.id()];
  
  			
  
--- 682,700 ----
  
  				source = new Hash();
  
+ 				this._cachedConnectSE.set(args.sourceStencil.id(), source);
  
  			}
  
  			
  
+ 			source.set(args.edgeStencil.id(), result);
  
  
  
  		} else {
  
+ 			var target = this._cachedConnectTE.get(args.targetStencil.id());
  
  			
  
***************
*** 702,714 ****
  
  				target = new Hash();
  
- 				this._cachedConnectTE[args.targetStencil.id()] = target;
  
  			}
  
  			
  
- 			target[args.edgeStencil.id()] = result;
  
  		}
  
--- 702,714 ----
  
  				target = new Hash();
  
+ 				this._cachedConnectTE.set(args.targetStencil.id(), target);
  
  			}
  
  			
  
+ 			target.set(args.edgeStencil.id(), result);
  
  		}
  
***************
*** 726,732 ****
  
  		if(args.sourceStencil) {
  
- 			var source = this._cachedCardSE[args.sourceStencil.id()]
  
  			
  
--- 726,732 ----
  
  		if(args.sourceStencil) {
  
+ 			var source = this._cachedCardSE.get(args.sourceStencil.id())
  
  			
  
***************
*** 734,740 ****
  
  				source = new Hash();
  
- 				this._cachedCardSE[args.sourceStencil.id()] = source;
  
  			}
  
--- 734,740 ----
  
  				source = new Hash();
  
+ 				this._cachedCardSE.set(args.sourceStencil.id(), source);
  
  			}
  
***************
*** 748,754 ****
  
  				
  
- 			source[args.edgeStencil.id()] = max;
  
  		}	
  
--- 748,754 ----
  
  				
  
+ 			source.set(args.edgeStencil.id(), max);
  
  		}	
  
***************
*** 756,762 ****
  
  		if(args.targetStencil) {
  
- 			var target = this._cachedCardTE[args.targetStencil.id()]
  
  			
  
--- 756,762 ----
  
  		if(args.targetStencil) {
  
+ 			var target = this._cachedCardTE.get(args.targetStencil.id())
  
  			
  
***************
*** 764,770 ****
  
  				target = new Hash();
  
- 				this._cachedCardTE[args.targetStencil.id()] = target;
  
  			}
  
--- 764,770 ----
  
  				target = new Hash();
  
+ 				this._cachedCardTE.set(args.targetStencil.id(), target);
  
  			}
  
***************
*** 778,784 ****
  
  				
  
- 			target[args.edgeStencil.id()] = max;
  
  		}
  
--- 778,784 ----
  
  				
  
+ 			target.set(args.edgeStencil.id(), max);
  
  		}
  
***************
*** 802,808 ****
  
  		
  
- 		var children = this._cachedContainPC[args.containingStencil.id()];
  
  		
  
--- 802,808 ----
  
  		
  
+ 		var children = this._cachedContainPC.get(args.containingStencil.id());
  
  		
  
***************
*** 810,822 ****
  
  			children = new Hash();
  
- 			this._cachedContainPC[args.containingStencil.id()] = children;
  
  		}
  
  		
  
- 		children[args.containedStencil.id()] = result;
  
  		
  
--- 810,822 ----
  
  			children = new Hash();
  
+ 			this._cachedContainPC.set(args.containingStencil.id(), children);
  
  		}
  
  		
  
+ 		children.set(args.containedStencil.id(), result);
  
  		
  
***************
*** 838,844 ****
  
  		
  
- 		var morphs = this._cachedMorphRS[role];
  
  		
  
--- 838,844 ----
  
  		
  
+ 		var morphs = this._cachedMorphRS.get(role);
  
  		
  
***************
*** 860,866 ****
  
  			
  
- 			this._cachedMorphRS[role] = morphs;
  
  		}
  
--- 860,866 ----
  
  			
  
+ 			this._cachedMorphRS.set(role, morphs);
  
  		}
  
***************
*** 1272,1278 ****
  
  		if(args.sourceStencil && args.targetStencil) {
  
- 			var source = this._cachedConnectSET[args.sourceStencil.id()];
  
  			
  
--- 1272,1278 ----
  
  		if(args.sourceStencil && args.targetStencil) {
  
+ 			var source = this._cachedConnectSET.get(args.sourceStencil.id());
  
  			
  
***************
*** 1282,1288 ****
  
  			else {
  
- 				var edge = source[args.edgeStencil.id()];
  
  
  
--- 1282,1288 ----
  
  			else {
  
+ 				var edge = source.get(args.edgeStencil.id());
  
  
  
***************
*** 1292,1298 ****
  
  				else {	
  
- 					var target = edge[args.targetStencil.id()];
  
  
  
--- 1292,1298 ----
  
  				else {	
  
+ 					var target = edge.get(args.targetStencil.id());
  
  
  
***************
*** 1310,1316 ****
  
  		} else if (args.sourceStencil) {	
  
- 			var source = this._cachedConnectSE[args.sourceStencil.id()];
  
  			
  
--- 1310,1316 ----
  
  		} else if (args.sourceStencil) {	
  
+ 			var source = this._cachedConnectSE.get(args.sourceStencil.id());
  
  			
  
***************
*** 1320,1326 ****
  
  			else {
  
- 				var edge = source[args.edgeStencil.id()];
  
  					
  
--- 1320,1326 ----
  
  			else {
  
+ 				var edge = source.get(args.edgeStencil.id());
  
  					
  
***************
*** 1336,1342 ****
  
  		} else { // args.targetStencil
  
- 			var target = this._cachedConnectTE[args.targetStencil.id()];
  
  			
  
--- 1336,1342 ----
  
  		} else { // args.targetStencil
  
+ 			var target = this._cachedConnectTE.get(args.targetStencil.id());
  
  			
  
***************
*** 1346,1352 ****
  
  			else {
  
- 				var edge = target[args.edgeStencil.id()];
  
  					
  
--- 1346,1352 ----
  
  			else {
  
+ 				var edge = target.get(args.edgeStencil.id());
  
  					
  
***************
*** 1370,1376 ****
  
  			if(args.sourceShape) {
  
- 				var source = this._cachedCardSE[args.sourceStencil.id()];
  
  				
  
--- 1370,1376 ----
  
  			if(args.sourceShape) {
  
+ 				var source = this._cachedCardSE.get(args.sourceStencil.id());
  
  				
  
***************
*** 1378,1390 ****
  
  					this._cacheCard(args);
  
- 					source = this._cachedCardSE[args.sourceStencil.id()];
  
  				}
  
  				
  
- 				var max = source[args.edgeStencil.id()];
  
  				
  
--- 1378,1390 ----
  
  					this._cacheCard(args);
  
+ 					source = this._cachedCardSE.get(args.sourceStencil.id());
  
  				}
  
  				
  
+ 				var max = source.get(args.edgeStencil.id());
  
  				
  
***************
*** 1396,1402 ****
  
  				
  
- 				max = source[args.edgeStencil.id()];
  
  				
  
--- 1396,1402 ----
  
  				
  
+ 				max = source.get(args.edgeStencil.id());
  
  				
  
***************
*** 1428,1434 ****
  
  			if (args.targetShape) {
  
- 				var target = this._cachedCardTE[args.targetStencil.id()];
  
  				
  
--- 1428,1434 ----
  
  			if (args.targetShape) {
  
+ 				var target = this._cachedCardTE.get(args.targetStencil.id());
  
  				
  
***************
*** 1436,1448 ****
  
  					this._cacheCard(args);
  
- 					target = this._cachedCardTE[args.targetStencil.id()];
  
  				}
  
  				
  
- 				var max = target[args.edgeStencil.id()];
  
  				
  
--- 1436,1448 ----
  
  					this._cacheCard(args);
  
+ 					target = this._cachedCardTE.get(args.targetStencil.id());
  
  				}
  
  				
  
+ 				var max = target.get(args.edgeStencil.id());
  
  				
  
***************
*** 1454,1460 ****
  
  				
  
- 				max = target[args.edgeStencil.id()];
  
  				
  
--- 1454,1460 ----
  
  				
  
+ 				max = target.get(args.edgeStencil.id());
  
  				
  
***************
*** 1588,1594 ****
  
  				resultCR = args.sourceStencil.roles().any(function(sourceRole) {
  
- 					var targetRoles = edgeRules[sourceRole];
  
  
  
--- 1588,1594 ----
  
  				resultCR = args.sourceStencil.roles().any(function(sourceRole) {
  
+ 					var targetRoles = edgeRules.get(sourceRole);
  
  
  
***************
*** 1706,1712 ****
  
  		
  
- 		var parent = this._cachedContainPC[args.containingStencil.id()];
  
  		
  
--- 1706,1712 ----
  
  		
  
+ 		var parent = this._cachedContainPC.get(args.containingStencil.id());
  
  		
  
***************
*** 1716,1722 ****
  
  		else {
  
- 			childValues = parent[args.containedStencil.id()];
  
  			
  
--- 1716,1722 ----
  
  		else {
  
+ 			childValues = parent.get(args.containedStencil.id());
  
  			
  
***************
*** 1840,1846 ****
  
  		result = args.containingStencil.roles().any((function(role) {
  
- 			var roles = this._containmentRules[role];
  
  			if(roles) {
  
--- 1840,1846 ----
  
  		result = args.containingStencil.roles().any((function(role) {
  
+ 			var roles = this._containmentRules.get(role);
  
  			if(roles) {
  
***************
*** 2208,2220 ****
  
  			// check if there are layout information
  
- 			if (this._layoutRules[role]){
  
  				// if so, parse those information to the 'layout' variable
  
- 				parseValues(this._layoutRules[role], "in");
  
- 				parseValues(this._layoutRules[role], "out");
  
  			}
  
--- 2208,2220 ----
  
  			// check if there are layout information
  
+ 			if (this._layoutRules.get(role) != undefined){
  
  				// if so, parse those information to the 'layout' variable
  
+ 				parseValues(this._layoutRules.get(role), "in");
  
+ 				parseValues(this._layoutRules.get(role), "out");
  
  			}
  
***************
*** 2384,2390 ****
  
  		child.roles().each((function(role) {
  
- 			var cardRule = this._cardinalityRules[role];
  
  			if(cardRule && cardRule.maximumOccurrence) {
  
--- 2384,2390 ----
  
  		child.roles().each((function(role) {
  
+ 			var cardRule = this._cardinalityRules.get(role);
  
  			if(cardRule && cardRule.maximumOccurrence) {
  
***************
*** 2448,2454 ****
  
  		args.sourceStencil.roles().each((function(role) {
  
- 			var cardRule = this._cardinalityRules[role];
  
  
  
--- 2448,2454 ----
  
  		args.sourceStencil.roles().each((function(role) {
  
+ 			var cardRule = this._cardinalityRules.get(role);
  
  
  
***************
*** 2456,2462 ****
  
  				args.edgeStencil.roles().each(function(edgeRole) {
  
- 					var oe = cardRule.outgoingEdges[edgeRole];
  
  
  
--- 2456,2462 ----
  
  				args.edgeStencil.roles().each(function(edgeRole) {
  
+ 					var oe = cardRule.outgoingEdges.get(edgeRole);
  
  
  
***************
*** 2524,2536 ****
  
  		args.targetStencil.roles().each((function(role) {
  
- 			var cardRule = this._cardinalityRules[role];
  
  			if(cardRule && cardRule.incomingEdges) {
  
  				args.edgeStencil.roles().each(function(edgeRole) {
  
- 					var ie = cardRule.incomingEdges[edgeRole];
  
  					if(ie && ie.maximum) {
  
--- 2524,2536 ----
  
  		args.targetStencil.roles().each((function(role) {
  
+ 			var cardRule = this._cardinalityRules.get(role);
  
  			if(cardRule && cardRule.incomingEdges) {
  
  				args.edgeStencil.roles().each(function(edgeRole) {
  
+ 					var ie = cardRule.incomingEdges.get(edgeRole);
  
  					if(ie && ie.maximum) {
  
***************
*** 2582,2598 ****
  
  		edgeStencil.roles().each((function(role) {
  
- 			if(this._connectionRules[role]) {
  
- 				this._connectionRules[role].each(function(cr) {
  
- 					if(edgeRules[cr.key]) {
  
- 						edgeRules[cr.key] = edgeRules[cr.key].concat(cr.value);
  
  					} else {
  
- 						edgeRules[cr.key] = cr.value;
  
  					}
  
--- 2582,2598 ----
  
  		edgeStencil.roles().each((function(role) {
  
+ 			if(this._connectionRules.get(role) != undefined) {
  
+ 				this._connectionRules.get(role).each(function(cr) {
  
+ 					if(edgeRules.get(cr.key) != undefined) {
  
+ 						edgeRules.set(cr.key, edgeRules.get(cr.key).concat(cr.value));
  
  					} else {
  
+ 						edgeRules.set(cr.key, cr.value);
  
  					}
  
